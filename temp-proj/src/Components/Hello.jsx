/* 
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useRef } from 'react';
import { useFBX, useGLTF } from '@react-three/drei';
import { AnimationMixer, Clock } from 'three'; // Import necessary THREE.js classes

export function Hello(props) {
  // Load the GLTF model for the 3D character
  const { nodes, materials } = useGLTF('models/Hello_new.glb');
  // Load the FBX file for animation (e.g., a greeting animation)
  const animation = useFBX('models/animations/Throwing Dice.fbx'); 

  const groupRef = useRef(); // Reference for the 3D group (model)
  const mixer = useRef(); // Reference for the AnimationMixer

  useEffect(() => {
    if (groupRef.current && animation) {
      // Initialize the AnimationMixer for the group (3D model)
      mixer.current = new AnimationMixer(groupRef.current);

      // Play the first animation clip in the FBX file
      if (animation.animations && animation.animations.length > 0) {
        const action = mixer.current.clipAction(animation.animations[0]);
        action.play(); // Start the animation
      }

      // Create a clock to control the animation timing
      const clock = new Clock();

      // Function to update the animation frame
      const animate = () => {
        requestAnimationFrame(animate);
        const delta = clock.getDelta(); // Get the time delta between frames
        mixer.current.update(delta); // Update the animation mixer
      };

      animate(); // Start the animation loop

      return () => {
        mixer.current.stopAllAction(); // Stop all animations when component unmounts
      };
    }
  }, [animation]); // Re-run effect when animation changes

  return (
    <group ref={groupRef} {...props} dispose={null}>
      {/* Render the 3D model's components such as eyes, head, body, etc. */}
      <primitive object={nodes.Hips} />
      <skinnedMesh
        name="EyeLeft"
        geometry={nodes.EyeLeft.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeLeft.skeleton}
        morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences}
      />
      <skinnedMesh
        name="EyeRight"
        geometry={nodes.EyeRight.geometry}
        material={materials.Wolf3D_Eye}
        skeleton={nodes.EyeRight.skeleton}
        morphTargetDictionary={nodes.EyeRight.morphTargetDictionary}
        morphTargetInfluences={nodes.EyeRight.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Head"
        geometry={nodes.Wolf3D_Head.geometry}
        material={materials.Wolf3D_Skin}
        skeleton={nodes.Wolf3D_Head.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences}
      />
      <skinnedMesh
        name="Wolf3D_Teeth"
        geometry={nodes.Wolf3D_Teeth.geometry}
        material={materials.Wolf3D_Teeth}
        skeleton={nodes.Wolf3D_Teeth.skeleton}
        morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Hair.geometry}
        material={materials.Wolf3D_Hair}
        skeleton={nodes.Wolf3D_Hair.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Glasses.geometry}
        material={materials.Wolf3D_Glasses}
        skeleton={nodes.Wolf3D_Glasses.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Body.geometry}
        material={materials.Wolf3D_Body}
        skeleton={nodes.Wolf3D_Body.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Bottom.geometry}
        material={materials.Wolf3D_Outfit_Bottom}
        skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Footwear.geometry}
        material={materials.Wolf3D_Outfit_Footwear}
        skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton}
      />
      <skinnedMesh
        geometry={nodes.Wolf3D_Outfit_Top.geometry}
        material={materials.Wolf3D_Outfit_Top}
        skeleton={nodes.Wolf3D_Outfit_Top.skeleton}
      />
    </group>
  );
}

// Preload the GLTF and FBX files to optimize loading
useGLTF.preload('models/Hello_new.glb');
useFBX.preload('models/animations/Standing Greeting.fbx');

export default Hello;
